- name: Get os info
  ansible.builtin.setup:
    gather_subset:
      - os_family

- name: Install PostgreSQL if Debian
  apt:
    name: postgresql
    state: present
    update_cache: yes
  when: ansible_facts['os_family'] == "Debian"

- name: Find postgresql.conf on Debian
  find:
    paths: /etc/postgresql
    patterns: postgresql.conf
    recurse: yes
  register: found_pg_conf
  when: ansible_facts['os_family'] == "Debian"

- name: Set pg_conf_path for Debian
  set_fact:
    pg_conf_path_debian: "{{ found_pg_conf.files[0].path }}"
  when: ansible_facts['os_family'] == "Debian"

- name: Find pg_hba.conf on Debian
  find:
    paths: /etc/postgresql
    patterns: pg_hba.conf
    recurse: yes
  register: found_pg_hba
  when: ansible_facts['os_family'] == "Debian"

- name: Set pg_hba_path for Debian
  set_fact:
    pg_hba_path_debian: "{{ found_pg_hba.files[0].path }}"
  when: ansible_facts['os_family'] == "Debian"

- name: Install PostgreSQL if RedHat(AlmaLinux)
  dnf:
    name: postgresql-server
    state: present
  when: ansible_facts['os_family'] == "RedHat"

- name: Init DB if Redhat
  command: postgresql-setup --initdb
  args:
    creates: /var/lib/pgsql/data/PG_VERSION
  when: ansible_facts['os_family'] == "RedHat"

- name: Setup listen_addresses = '*'
  lineinfile:
    path: "{{ pg_conf_path_debian if ansible_facts['os_family'] == 'Debian' else pg_conf_path_redhat }}"
    regexp: '^#?listen_addresses ='
    line: "listen_addresses = '*'"
    state: present

- name: Set user=student to connect from client_host
  lineinfile:
    path: "{{ pg_hba_path_debian if ansible_facts['os_family'] == 'Debian' else pg_hba_path_redhat }}"
    line: "host all student {{ client_host }}/32 md5"
    insertafter: EOF
    state: present

- name: Restart PostgreSQL
  service:
    name: postgresql
    state: restarted
    enabled: true

- name: Install psycopg2 on Debian
  apt:
    name: python3-psycopg2
    state: present
    update_cache: yes
  when: ansible_facts['os_family'] == "Debian"

- name: Install psycopg2 on RedHat
  dnf:
    name: python3-psycopg2
    state: present
    update_cache: yes
  when: ansible_facts['os_family'] == "RedHat"

- name: Create user=student
  become_user: postgres
  community.postgresql.postgresql_user:
    name: student
    password: "studentpass"
    db: postgres
    priv: "ALL"
